import { stringify } from "../deps.ts";
import WorkflowSpec from "./workflow_spec.ts";
import { EventSpec, EventSpecSchema } from "./event.ts";
import { JobSpec, JobSpecSchema } from "./job_spec.ts";

class Workflow {
  private yaml: WorkflowSpec;

  constructor(name: string) {
    this.yaml = {
      name,
      on: {},
      jobs: {},
    };
  }

  name(value: string) {
    this.yaml.name = value;
  }

  on(event: EventSpec): Workflow {
    EventSpecSchema.parse(event);
    this.yaml.on = event;
    return this;
  }

  withJob(jobId: string, job: JobSpec): Workflow {
    JobSpecSchema.parse(job);
    this.yaml.jobs[jobId] = job;
    return this;
  }

  jobs(value: { [jobId: string]: JobSpec }): Workflow {
    for (const jobId in value) {
      JobSpecSchema.parse(value[jobId]);
    }
    this.yaml.jobs = value;
    return this;
  }

  toString() {
    return `# Do not edit this file directly. It is generated by https://deno.land/x/fluent_github_actions\n\n${stringify(
      this.yaml
    ).replaceAll(" >2-", " |")}`;
  }

  save(path: string) {
    const config = this.toString();
    Deno.writeTextFileSync(path, config);
  }
}

export default Workflow;
